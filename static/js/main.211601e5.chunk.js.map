{"version":3,"sources":["components/Alert.jsx","components/Navbar.jsx","components/TextForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","text","lower","toLowerCase","charAt","toUpperCase","slice","capitalise","message","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","SetText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.211601e5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalise = (text) => {\r\n        const lower = text.toLowerCase();\r\n        return  lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalise(props.alert.type)}</strong>: {props.alert.message}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href='#'>{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href='#'>Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href='/about'>{props.about}</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick= {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? \"Dark\" : \"Light\"} Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Title',\r\n  about: \"About\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        SetText(newText);\r\n        props.showAlert(\"Converted to Upper Case!!\", \"success\");\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        SetText(newText);\r\n        props.showAlert(\"Converted to Lower Case!!\", \"success\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"text\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied to Clipboard!!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        SetText(newText.join(' '));\r\n        props.showAlert(\"Extra Spaces removed!!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        SetText(event.target.value);\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        SetText(newText);\r\n        props.showAlert(\"Text Erased!!\", \"success\");\r\n    }\r\n\r\n    const [text, SetText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" >\r\n            <div className=\"mb-3\" style= {{color : props.mode === 'dark' ? 'white' : '#042743'}} >\r\n                <h1>{props.heading}</h1>\r\n                <textarea className=\"form-control\" value={text} id=\"text\" style={{backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743'}} onChange={handleOnChange} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"bt btn-primary mx-1\" onClick={handleUpClick} >Convert to Upper Case</button>\r\n            <button className=\"bt btn-primary mx-1\" onClick={handleLowClick} >Convert to Lower Case</button>\r\n            <button className=\"bt btn-primary mx-1\" onClick={handleClearClick} >Clear Text</button>\r\n            <button className=\"bt btn-primary mx-1\" onClick={handleCopy} >Copy Text</button>\r\n            <button className=\"bt btn-primary mx-1\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n        </div>\r\n\r\n        <div className=\"container\" style= {{color : props.mode === 'dark' ? 'white' : '#042743'}} >\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} Words and {text.length} characters </p>\r\n            <p>{0.008 * text.split(\" \").length} to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0 ? text : \"Enter text in the above container to Preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n// import {\n// BrowserRouter as Router,\n// Route,\n// Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert =(message, type) => {\n    setAlert ({\n      message : message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor ='#042743';\n      showAlert(\"Dark mode enabled!!\", \"success\")\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled!!\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text Utils\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert= {alert} />\n      <div className=\"container\">\n\n       {/* <Routes>\n          <Route exact path=\"/about\" element={<About />} ></Route> */}\n\n          {/* <Route exact path=\"/\" element={ */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text below\" mode={mode} />\n           {/* } ></Route> */}\n        {/* </Routes> */}\n\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}